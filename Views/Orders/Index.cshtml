@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string priceString = Context.Request.Query["price"];
    int totalPrice = int.Parse(priceString) + 30;
}
<!DOCTYPE html>
<head>
    <meta charset="utf-8" />
    <title>PayPal</title>
    <style>

        /* Reset some default styles */
        body, h1, h2, h3, p, ul, li, form, label {
            margin: 0;
            padding: 0;
        }

        /* Style the container for the three sections */
        .order-container {
            display: flex;
            justify-content: space-between;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .payment-options label {
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

        .payment-label {
            display: block;
            margin-bottom: 10px;
        }

            .payment-label:hover {
                background-color: #f0f0f0; /* צביעת רקע בעת העכבר מעל */
            }

            .payment-label input[type="radio"]:checked + .label-text {
                background-color: grey; /* שינוי רקע עבור תווית של תיבת הסימון שנבחרה */
                color: white; /* צביעת טקסט בתווית הסמוכה לתיבת הסימון שנבחרה */
            }

        .label-text {
            margin-right: 0;
            margin-left: 10px;
            content: "";
            border-radius: 50%;
            display: inline-block;
            width: 0.9rem;
            height: 0.9rem;
            margin-right: 10px;
            border: 1px solid var(--ct-color-black);
            vertical-align: middle;
        }


        /* Style the individual sections */
        .billing-section, .delivery-section, .payment-section {
            flex: 1;
            margin: 0 10px;
        }

        /* Style the card elements */
        .card {
            flex: 1; /* הקצאת אותו גודל לכל כרטיס */
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            text-align: left;
            margin: 20px;
            padding: 10px;
            text-align: center;
            margin: 0 auto; /* הוסף את זה כדי למרכז את הכרטיס באופן אופטימלי */
            border: none; /* הוסף את זה כדי להסיר את המסגרת */
            border-radius: 0; /* גג זה כדי להסיר גבולות עגולים, ניתן לשנות לכל ערך שתרצה */
            background-color: #f5f5f5;
        }


        /* Style the form elements */
        form {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-gap: 10px;
        }

        /* תסדר את ה-labels לצד ימין של התיבות */
        label {
            text-align: right;
            padding-right: 10px;
            display: block;
            font-weight: bold;
        }

        .right-aligned-label {
            text-align: right;
        }

        /* תשנה את העיצוב של ה-inputs כך שהם יימצו מימין לשם */

        input {
            direction: rtl;
            width: 100%;
            padding: 5px;
            margin: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }


/*        /* Style headings for sections */
        h2 {
            font-size: 20px;
            margin-bottom: 10px;
        }*/

        /* Style the submit button if you have one */
        input[type="submit"] {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }

            /* Add hover effect to the submit button */
            input[type="submit"]:hover {
                background-color: #0056b3;
            }

        .shipping-label {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .shipping-label span {
                margin-left: 5px;
            }

        .shipping-text {
            order: 1; /* שינוי סדר ההצגה לצד ימין */
        }

      .card {
            padding-bottom: 20px; /* הוספת מרווח בין ה־labelים */
        }

        .comments-label {
            display: block;
            margin-top: 10px; /* מרווח בין ה־labelים */
        }



        button {
            background-color: #D9B9A0;
            color: #000;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            display: block; /* Change to block to make it take the full width */
            margin: 30px auto 0;  Add 30px top margin, center horizontally 
        }

            button:hover {
                background-color: #fff;
            }*/

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

       .card {
            width: 300px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 20px;
            padding: 10px;
            text-align: center;
            margin: 0 auto; /* הוסף את זה כדי למרכז את הכרטיס באופן אופטימלי */
            border: none; /* הוסף את זה כדי להסיר את המסגרת */
            border-radius: 0; /* גג זה כדי להסיר גבולות עגולים, ניתן לשנות לכל ערך שתרצה */
            background-color: #f5f5f5;
        }

        img {
            max-width: 100%;
            border-radius: 5px;
        }

        h2 {
            font-size: 1.5rem;
            margin: 10px 0;
        }

        p {
            font-size: 1rem;
            margin: 0;
        }

        button {
            background-color: #D9B9A0;
            color: #000;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            display: block; 
            margin: 30px auto 0; 
        }

            button:hover {
                background-color: #fff;}
        paypal-button-container {
            display: none;
</style>
</head>




<body>
   <p>תאריך:</p>
   <p1>סיכום הזמנה:</p1>
   <div class="card">
            <img src="/@Context.Request.Query["image"]">
            <h2>@Context.Request.Query["name"]</h2>
            <p> :בחירת טעמים</p>
            <p1 style="margin=5px;" id="selectedFlavorNamesDisplay">
                @foreach (var flavor in Context.Request.Query["flavors"])
                {
                    <p>@flavor</p>
                }
            </p1>
            <span data-bind="text: getValue()" style="background:#fff"> ₪ סה" כ: @Context.Request.Query["price"].00 </span>
    </div>
    <div class="card">
            <label class="shipping-label">
                <span>₪@priceString.00</span>
                <span class="shipping-text">:סכום ביניים</span>
            </label>
            <label class="shipping-label">
                <span>₪30.00</span>
                <span class="shipping-text">:משלוח</span>
            </label>
            <label class="shipping-label">
                <span>₪@totalPrice.00</span>
                <span style="font-size: 20px;" class="shipping-text">:סה"כ</span>
            </label>
            <hr>
            <label for="terms-checkbox">
                <span>.קראתי ואני מסכים/מה לתנאי השימוש</span>
                <input class="label-text" type="checkbox" id="terms-checkbox" required>
            </label>
            <label>אנחנו נשתמש בפרטים האישיים שלך כדי לעבד את ההזמנה, להציע לך תמיכה בתהליך באתר זה וכדי לבצע פעולות נוספות כפי שמפורט במדיניות פרטיות</label>
     </div>

    <hr>

    <div class="card">
       <label class="shipping-label">
            <span>₪30.00</span>
            <span class="shipping-text">משלוח עד הבית (25-45 דק')</span>
       </label>
       <label for="comments" class="comments-label">הערות להזמנה (מקסימום 200)</label>
       <textarea id="comments" name="comments" rows="4" maxlength="200" style="direction: rtl;"></textarea>
     </div>

     <div class="card">
           <h2>פרטי חיוב</h2>
                <form>
                    <div class="right-aligned-label">
                        <label for="last-name">שם משפחה</label>
                        <input type="text" id="last-name" name="last-name" style="direction: rtl;" required>
                    </div>

                    <div class="right-aligned-label">
                        <label for="first-name">שם פרטי</label>
                        <input type="text" id="first-name" name="first-name" style="direction: rtl;" required>
                    </div>

                    <div class="right-aligned-label">
                        <label for="phone">טלפון</label>
                        <input type="text" id="phone" name="phone" style="direction: rtl;" required>
                    </div>

                    <div class="right-aligned-label">
                        <label for="phone">אימייל</label>
                        <input type="text" id="email" name="email" style="direction: rtl;" required>
                    </div>

                    <div class="right-aligned-label">
                        <label for="street">רחוב</label>
                        <input type="email" id="street" name="street" style="direction: rtl;" required>
                    </div>

                    <div class="right-aligned-label">
                        <label for="city">עיר</label>
                        <input type="text" id="city" name="city" style="direction: rtl;" required>
                    </div>
@*                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>*@
                </form>
    </div>
      <button id="submit-order-button">שליחת הזמנה</button>

    <!-- תיבת PayPal - המקום שבו יופיע כפתור PayPal -->
    <div id="paypal-button-container" style="display: none;"></div>

    <!-- קוד PayPal SDK -->
    <script src="https://www.paypal.com/sdk/js?client-id=AVQtxsHXxTwurvaNsMWSzDyCl5dy2AfGjz_MJqG7Y9mWUdIl4ESF38LXo32bwRQ3JVysTqoacvUMLH8Z"></script>
    <script>
        function displayPayPalButton() {
            paypal.Buttons({
                style: {
                    disableMaxWidth: true
                },
                createOrder: function (data, actions) {
                    var totalPrice = 100; // חלק מהלוגיקה שלך לחישוב סכום הקניה
                    console.log(totalPrice);
                    return actions.order.create({
                        purchase_units: [{
                            amount: {
                                value: totalPrice
                            }
                        }]
                    });
                },
                onApprove: function (data, actions) {
                    return actions.order.capture().then(function (details) {
                        return fetch('/your-server-side-code', {
                            method: 'post',
                            headers: {
                                'content-type': 'application/json'
                            },
                            body: JSON.stringify({
                                orderID: data.orderID
                            })
                        }).then(function (response) {
                            if (response.ok) {
                                alert('ההזמנה בוצעה בהצלחה! תודה על הרכישה.');
                            } else {
                                alert('אירעה שגיאה בעיבוד ההזמנה. נא לנסות שוב מאוחר יותר.');
                            }
                        }).catch(function (error) {
                            console.error('שגיאה בביצוע בקשה לשרת:', error);
                            alert('אירעה שגיאה בעיבוד ההזמנה. נא לנסות שוב מאוחר יותר.');
                        });
                    });
                }
            }).render('#paypal-button-container');
        }

        document.getElementById("submit-order-button").addEventListener("click", function () {
            document.getElementById("paypal-button-container").style.display = "block";
            displayPayPalButton();
        });
    </script>

</body>
</html>




<script>
    function FillFields(event) {
        var firstName = document.getElementById("first-name").value;
        var lastName = document.getElementById("last-name").value;
        var phone = document.getElementById("phone").value;
        var street = document.getElementById("street").value;
        var city = document.getElementById("city").value;

        var paymentMethodSelected = document.querySelector('input[name="payment-method"]:checked') !== null;
        var termsCheckboxChecked = document.getElementById("terms-checkbox").checked;

        var phoneRegex = /^\d{10}$/;
        var isValidPhone = phoneRegex.test(phone);

        if (
            firstName === "" ||
            lastName === "" ||
            phone === "" ||
            street === "" ||
            city === "" ||
            !paymentMethodSelected ||
            !termsCheckboxChecked
        ) {
            alert("אנא מלא/י את כל השדות הנדרשים");
            event.preventDefault(); // This prevents the default action
        } else if (!isValidPhone) {
            alert("נא להזין מספר טלפון תקין בעל 10 ספרות");
            event.preventDefault(); // This prevents the default action (e.g., following the link)
        } else {
            window.location.href = orderButton.getAttribute("href");
        }
    }


</script>

<script>
    // שמירת הנתונים ב־Local Storage ברגע שהטופס מוגש
    function saveDataToLocalStorage() {
        var lastName = document.getElementById('last-name').value;
        var firstName = document.getElementById('first-name').value;
        var phone = document.getElementById('phone').value;
        var email = document.getElementById('email').value;
        var city = document.getElementById('city').value;
        var street = document.getElementById('street').value;
        var price = @totalPrice;
        console.log(street);

        localStorage.setItem('lastName', lastName);
        localStorage.setItem('firstName', firstName);
        localStorage.setItem('phone', phone);
        localStorage.setItem('email', email);
        localStorage.setItem('city', city);
        localStorage.setItem('street', street);
        localStorage.setItem('price', price);
    }
</script>
