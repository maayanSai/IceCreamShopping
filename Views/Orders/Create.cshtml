@model IceCreamsShopping.Models.Order

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string priceString = Context.Request.Query["price"];
    int totalPrice = 400; /*int.Parse(priceString) + 30;*/
}
<!DOCTYPE html>
<head>
    <style>

        /* Reset some default styles */
        body, h1, h2, h3, p, ul, li, form, label {
            margin: 0;
            padding: 0;
        }

        .text-danger {
            color: red;
        }

        /* Style the container for the three sections */
        .order-container {
            display: flex;
            justify-content: space-between;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .payment-options label {
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

        .payment-label {
            display: block;
            margin-bottom: 10px;
        }

            .payment-label:hover {
                background-color: #f0f0f0; /* צביעת רקע בעת העכבר מעל */
            }

            .payment-label input[type="radio"]:checked + .label-text {
                background-color: grey; /* שינוי רקע עבור תווית של תיבת הסימון שנבחרה */
                color: white; /* צביעת טקסט בתווית הסמוכה לתיבת הסימון שנבחרה */
            }

        .label-text {
            margin-right: 0;
            margin-left: 10px;
            content: "";
            border-radius: 50%;
            display: inline-block;
            width: 0.9rem;
            height: 0.9rem;
            margin-right: 10px;
            border: 1px solid var(--ct-color-black);
            vertical-align: middle;
        }


        /* Style the individual sections */
        .billing-section, .delivery-section, .payment-section {
            flex: 1;
            margin: 0 10px;
        }

        /* Style the form elements */
        form {
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-gap: 10px;
        }

        /* תסדר את ה-labels לצד ימין של התיבות */
        label {
            text-align: right;
            padding-right: 10px;
            display: block;
            font-weight: bold;
        }

        .right-aligned-label {
            text-align: right;
        }

        /* תשנה את העיצוב של ה-inputs כך שהם יימצו מימין לשם */

        input {
            direction: rtl;
            width: 100%;
            padding: 5px;
            margin: 10px;
            border: 1px solid #ccc;
            border-radius: 3px;
        }


        /*        /* Style headings for sections */
        h2 {
            font-size: 20px;
            margin-bottom: 10px;
        }

        */
        /* Style the submit button if you have one */
        input[type="submit"] {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }

        /* Add hover effect to the submit button */
        input[type="submit"]:hover {
            background-color: #0056b3;
        }

        .shipping-label {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .shipping-label span {
                margin-left: 5px;
            }

        .shipping-text {
            order: 1; /* שינוי סדר ההצגה לצד ימין */
        }


        .comments-label {
            display: block;
            margin-top: 10px; /* מרווח בין ה־labelים */
        }



        button {
            background-color: #D9B9A0;
            color: #000;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            display: block; /* Change to block to make it take the full width */
            margin: 30px auto 0;
            Add 30px top margin, center horizontally
        }

            button:hover {
                background-color: #fff;
            }

        .cards-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }

        .card {
            width: calc(33.33% - 20px);
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 10px; /* מרווח קטן סביב כל כרטיס */
            padding: 20px;
            text-align: center;
            border: none;
            border-radius: 0;
            background-color: #f5f5f5;
            border-bottom: 1px solid #000;
        }


        img {
            max-width: 100%;
            border-radius: 5px;
        }

        h2 {
            font-size: 1.5rem;
            margin: 10px 0;
        }

        p {
            font-size: 1rem;
            margin: 0;
            text-align: right;
            display: flex;
            justify-content: flex-end;
        }

        button {
            background-color: #D9B9A0;
            color: #000;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            display: block;
            margin: 30px auto 0;
        }

            button:hover {
                background-color: #fff;
            }

        paypal-button-container {
            display: none;
    </style>
</head>
<html>

<body>
<p>
        תאריך: @ViewBag.OrderDate
</p>
    <div class="card" style="float: right; ">
        <h2>:סיכום הזמנה</h2>
        <img src="/@Context.Request.Query["image"]"></img>
        <h2>@Context.Request.Query["name"]</h2>
        <p> :בחירת טעמים</p>
        <p1 style="margin=5px;" id="selectedFlavorNamesDisplay">
            @foreach (var flavor in Context.Request.Query["flavors"])
            {
                <p>@flavor</p>
            }
        </p1>
        <span data-bind="text: getValue()" style="background:#fff"> ₪ סה"כ: @priceString.00 </span>
    </div>

    <div style="clear: both;"></div>

    <div class="cards-container">
        <div class="card">
            <h2>תשלום</h2>
            <label class="shipping-label">
                <span>₪@priceString.00</span>
                <span class="shipping-text">:סכום ביניים</span>
            </label>
            <label class="shipping-label">
                <span>₪30.00</span>
                <span class="shipping-text">:משלוח</span>
            </label>
            <label class="shipping-label">
                <span>₪@totalPrice.00</span>
                <span style="font-size: 20px;" class="shipping-text">:סה"כ</span>
            </label>
            <hr>
            <label for="terms-checkbox">
                <span>.קראתי ואני מסכים/מה לתנאי השימוש</span>
                <input class="label-text" type="checkbox" id="terms-checkbox" required>
            </label>
            <label>אנחנו נשתמש בפרטים האישיים שלך כדי לעבד את ההזמנה, להציע לך תמיכה בתהליך באתר זה וכדי לבצע פעולות נוספות כפי שמפורט במדיניות פרטיות</label>
            <hr>

            <button id="submit-order-button">שליחת הזמנה</button>

            <div class="card">
                <div id="paypal-button-container" style="display: none;"></div>
                <script src="https://www.paypal.com/sdk/js?client-id=AVQtxsHXxTwurvaNsMWSzDyCl5dy2AfGjz_MJqG7Y9mWUdIl4ESF38LXo32bwRQ3JVysTqoacvUMLH8Z"></script>
                <script>
                    function displayPayPalButton() {
                        paypal.Buttons({
                            style: {
                                disableMaxWidth: true
                            },
                            createOrder: function (data, actions) {
                                var totalPrice = @totalPrice;
                                console.log(totalPrice);
                                return actions.order.create({
                                    purchase_units: [{
                                        amount: {
                                            value: totalPrice
                                        }
                                    }]
                                });
                            },
                            onApprove: function (data, actions) {
                                // Capture the funds from the transaction
                                return actions.order.capture().then(function (details) {
                                    // Call your server to save the transaction
                                    return fetch('/your-server-side-code', {
                                        method: 'post',
                                        headers: {
                                            'content-type': 'application/json'
                                        },
                                        body: JSON.stringify({
                                            orderID: data.orderID
                                        })
                                    }).then(function (response) {
                                        alert('ההזמנה בוצעה בהצלחה! תודה על הרכישה.');
                                    }).catch(function (error) {
                                        console.error('שגיאה בביצוע בקשה לשרת:', error);
                                        alert('אירעה שגיאה בעיבוד ההזמנה. נא לנסות שוב מאוחר יותר.');
                                    });
                                });
                            }
                        }).render('#paypal-button-container')
                    }

                </script>
               
            </div>
        </div>


        <div class="card">
            <h2>שיטת משלוח</h2>
            <label class="shipping-label">
                <span>₪30.00</span>
                <span class="shipping-text">משלוח עד הבית (25-45 דק')</span>
            </label>
            <label for="comments" class="comments-label">הערות להזמנה (מקסימום 200)</label>
            <textarea id="comments" name="comments" rows="4" maxlength="200" style="direction: rtl;"></textarea>
        </div>

<div class="card">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="right-aligned-label"></div>
                <div class="form-group">
                    <label asp-for="LastName" class="control-label">שם משפחה</label>
                    <input style="direction: rtl;" asp-for="LastName" class="form-control" id="last-name" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label">שם פרטי</label>
                    <input asp-for="FirstName" class="form-control" id="first-name" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label">אימייל</label>
                    <input asp-for="Email" class="form-control" id="email" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            <div class="form-group">
                <label asp-for="Phone" class="control-label">טלפון</label>
                    <input asp-for="Phone" class="form-control" id="phone" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="City" class="control-label">עיר</label>
                    <input asp-for="City" class="form-control" id="city" />
                <span asp-validation-for="City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Street" class="control-label">רחוב</label>
                    <input asp-for="Street" class="form-control" id="street" />
                <span asp-validation-for="Street" class="text-danger"></span>
            </div>
                <div class="form-group">
                    <label asp-for="Product" class="control-label">מוצר נבחר</label>
                    <input asp-for="Product" class="form-control"  value="@Context.Request.Query["name"]" />
                    <span asp-validation-for="Product" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Flavors" class="control-label">מוצר נבחר</label>
                    <input asp-for="Flavors" class="form-control"  value="@Context.Request.Query["flavors"]" />
                    <span asp-validation-for="Flavors" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderPrice" class="control-label">מחיר הזמנה</label>
                    <input asp-for="OrderPrice" class="form-control" value="@totalPrice" />
                    <span asp-validation-for="OrderPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Weather" class="control-label">מזג אויר</label>
                    <input asp-for="Weather" class="form-control" value="@ViewBag.Weather" />
                    <span asp-validation-for="Weather" class="text-danger"></span>
                </div>



            <div>
                    <span>
                        @Html.ValidationMessage("IsAddress", new { @class = "text-danger" })
                    </span>
                </div>
                <div class="form-group">
                    <input id="address" type="submit" value="בדיקת תקינות כתובת" class="btn btn-primary" />
                </div>
        </form>
        </div>



    </div>
</body>
</html>

<script>
    var selectedFlavorNamesDisplayValue = localStorage.getItem('selectedFlavorNamesDisplayValue');
    document.getElementById("selectedFlavorNamesDisplay").textContent = selectedFlavorNamesDisplayValue;
</script>
<script>
    document.getElementById("submit-order-button").addEventListener("click", async function (event) {
        event.preventDefault(); // מונע את ההתנהגות המובנית של הטופס

        // אם כל השדות תקינים, נבצע בדיקת כתובות
        var firstName = document.getElementById("first-name").value;
        var lastName = document.getElementById("last-name").value;
        var phone = document.getElementById("phone").value;
        var street = document.getElementById("street").value;
        var city = document.getElementById("city").value;
        var email = document.getElementById("email").value;
        var termsCheckboxChecked = document.getElementById("terms-checkbox").checked;


        var phoneRegex = /^\d{10}$/;
        var isValidPhone = phoneRegex.test(phone);

        if (firstName !== "" &&lastName !== "" &&phone !== "" &&street !== "" &&city !== "" &&termsCheckboxChecked)
        {
            if (!isValidPhone) {
                alert("אנא מלא/י מספר טלפון תקין");
            }
            else {         
                document.getElementById("paypal-button-container").style.display = "block";
                displayPayPalButton();
            }
        } 
        else 
        {
            alert("אנא מלא/י את כל השדות הנדרשים")
            event.preventDefault();
            document.getElementById("paypal-button-container").style.display = "none";
        }
    });
</script>



